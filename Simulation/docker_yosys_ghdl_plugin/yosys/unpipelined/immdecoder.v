/* Generated by Yosys 0.9+3624 (git sha1 UNKNOWN, clang 7.0.1-8+deb10u2 -fPIC -Os) */

module ImmDecoder(Instruction, Imm_sel, Immediate);
  wire _00_;
  wire _01_;
  wire [7:0] _02_;
  wire [10:0] _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire [3:0] _11_;
  wire [5:0] _12_;
  input [2:0] Imm_sel;
  output [31:0] Immediate;
  input [24:0] Instruction;
  assign _06_ = Imm_sel == 3'h2;
  assign _07_ = Imm_sel == 3'h3;
  assign _08_ = Imm_sel == 3'h4;
  assign _09_ = Imm_sel == 3'h5;
  function [0:0] \138 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \138  = b[0:0];
      6'b????1?:
        \138  = b[1:1];
      6'b???1??:
        \138  = b[2:2];
      6'b??1???:
        \138  = b[3:3];
      6'b?1????:
        \138  = b[4:4];
      6'b1?????:
        \138  = b[5:5];
      default:
        \138  = a;
    endcase
  endfunction
  assign _10_ = \138 (1'hx, { Instruction[8], 3'h0, Instruction[0], Instruction[13] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [3:0] \145 ;
    input [3:0] a;
    input [23:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \145  = b[3:0];
      6'b????1?:
        \145  = b[7:4];
      6'b???1??:
        \145  = b[11:8];
      6'b??1???:
        \145  = b[15:12];
      6'b?1????:
        \145  = b[19:16];
      6'b1?????:
        \145  = b[23:20];
      default:
        \145  = a;
    endcase
  endfunction
  assign _11_ = \145 (4'hx, { Instruction[12:9], Instruction[17:14], 4'h0, Instruction[4:1], Instruction[4:1], Instruction[17:14] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [5:0] \151 ;
    input [5:0] a;
    input [35:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \151  = b[5:0];
      6'b????1?:
        \151  = b[11:6];
      6'b???1??:
        \151  = b[17:12];
      6'b??1???:
        \151  = b[23:18];
      6'b?1????:
        \151  = b[29:24];
      6'b1?????:
        \151  = b[35:30];
      default:
        \151  = a;
    endcase
  endfunction
  assign _12_ = \151 (6'hxx, { 6'h00, Instruction[23:18], 6'h00, Instruction[23:18], Instruction[23:18], Instruction[23:18] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [0:0] \157 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \157  = b[0:0];
      6'b????1?:
        \157  = b[1:1];
      6'b???1??:
        \157  = b[2:2];
      6'b??1???:
        \157  = b[3:3];
      6'b?1????:
        \157  = b[4:4];
      6'b1?????:
        \157  = b[5:5];
      default:
        \157  = a;
    endcase
  endfunction
  assign _01_ = \157 (1'hx, { 1'h0, Instruction[13], 1'h0, Instruction[0], Instruction[24], Instruction[24] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [7:0] \164 ;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \164  = b[7:0];
      6'b????1?:
        \164  = b[15:8];
      6'b???1??:
        \164  = b[23:16];
      6'b??1???:
        \164  = b[31:24];
      6'b?1????:
        \164  = b[39:32];
      6'b1?????:
        \164  = b[47:40];
      default:
        \164  = a;
    endcase
  endfunction
  assign _02_ = \164 (8'hxx, { 8'h00, Instruction[12:5], Instruction[12:5], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [10:0] \172 ;
    input [10:0] a;
    input [65:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \172  = b[10:0];
      6'b????1?:
        \172  = b[21:11];
      6'b???1??:
        \172  = b[32:22];
      6'b??1???:
        \172  = b[43:33];
      6'b?1????:
        \172  = b[54:44];
      6'b1?????:
        \172  = b[65:55];
      default:
        \172  = a;
    endcase
  endfunction
  assign _03_ = \172 (11'hxxx, { 11'h000, Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24:13], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  function [0:0] \179 ;
    input [0:0] a;
    input [5:0] b;
    input [5:0] s;
    (* parallel_case *)
    casez (s)
      6'b?????1:
        \179  = b[0:0];
      6'b????1?:
        \179  = b[1:1];
      6'b???1??:
        \179  = b[2:2];
      6'b??1???:
        \179  = b[3:3];
      6'b?1????:
        \179  = b[4:4];
      6'b1?????:
        \179  = b[5:5];
      default:
        \179  = a;
    endcase
  endfunction
  assign _04_ = \179 (1'hx, { 1'h0, Instruction[24], Instruction[24], Instruction[24], Instruction[24], Instruction[24] }, { _09_, _08_, _07_, _06_, _05_, _00_ });
  assign _00_ = Imm_sel == 3'h0;
  assign _05_ = Imm_sel == 3'h1;
  assign Immediate = { _04_, _03_, _02_, _01_, _12_, _11_, _10_ };
endmodule
